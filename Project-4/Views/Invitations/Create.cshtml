@model Project_4.Models.Invitation

@{
    ViewBag.Title = "Create";
}


<div class="row">
    <div class="col-lg-offset-1 col-lg-10">
        <div class="sparkline12-list shadow-reset mg-t-30">
            <div class="sparkline12-hd">
                <div class="main-sparkline12-hd">
                    <h1>Invite New Member to Household</h1>
                    <div class="sparkline12-outline-icon">
                        <span class="sparkline12-collapse-link"><i class="fa fa-chevron-up"></i></span>
                        <span><i class="fa fa-refresh"></i></span>
                        <span class="sparkline12-collapse-close"><i class="fa fa-times"></i></span>
                    </div>
                </div>
            </div>
            <div class="sparkline12-graph">
                <div class="basic-login-form-ad">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="all-form-element-inner">

                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(m => m.HouseholdId)
                                  
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                    <div class="form-group-inner">
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-4 col-xs-12">
                                                @Html.LabelFor(m => m.ReceipentEmail, new { @class = "login2 pull-right pull-right-pro" })

                                            </div>
                                            <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12">
                                                @Html.EditorFor(model => model.ReceipentEmail, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ReceipentEmail, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group-inner">
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-4 col-xs-12">
                                                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "login2 pull-right pull-right-pro" })

                                            </div>
                                            <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12">
                                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group-inner">
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-4 col-xs-12">
                                                @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "login2 pull-right pull-right-pro" })

                                            </div>
                                            <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12">
                                                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group-inner">
                                        <div class="row">
                                            <div class="col-lg-3 col-md-3 col-sm-4 col-xs-12">
                                                @Html.LabelFor(model => model.TTL, htmlAttributes: new { @class = "login2 pull-right pull-right-pro" })

                                            </div>
                                            <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12">
                                                @Html.EditorFor(model => model.TTL, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.TTL, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                           


                                    <div class="row">
                                        <div class="col-lg-3 col-md-3 col-sm-4 col-xs-12"></div>

                                        <div class="col-lg-1 col-md-1 col-sm-2 col-xs-2">
                                            <div class="login-horizental cancel-wp pull-left">

                                                <button class="btn btn-success btn-block" type="submit">Create</button>

                                            </div>
                                        </div>
                                        <div class="col-lg-2 col-md-2 col-sm-2 col-xs-3">
                                            <div class="login-horizental cancel-wp pull-left">

                                                <button class="btn btn-default">@Html.ActionLink("Cancel", "Dashboard", "Households")</button>

                                            </div>
                                        </div>

                                    </div>

                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>







